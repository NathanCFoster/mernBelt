{"version":3,"sources":["components/LandindPage.jsx","components/Login.jsx","components/Register.jsx","components/Logout.jsx","components/CreatePirate.jsx","components/ViewPirate.jsx","components/DeletePirate.jsx","App.js","reportWebVitals.js","index.js"],"names":["props","useState","pirates","setPirates","io","socket","useEffect","emit","on","e","className","to","TransitionGroup","map","item","CSSTransition","timeout","classNames","src","image","alt","style","height","_id","name","username","setUsername","password","setPassword","handleSubmit","a","preventDefault","axios","get","data","user","bcrypt","compareSync","login","onSubmit","type","value","placeholder","onChange","target","require","email","setEmail","confirmPW","setConfirm","userErr","emailErr","pwErr","confirmErr","nameErr","mailErr","errs","setErrs","Object","keys","every","length","post","hashSync","updatedErrs","error","errors","navigate","useNavigate","localStorage","clear","setName","setImage","numofchests","setChests","catchphrase","setPhrase","position","setPosition","pegleg","setPegleg","eyepatch","setEyepatch","hookhand","setHookhand","setErrrs","res","console","log","htmlFor","id","checked","useParams","pirate","setPirate","then","catch","delete","App","results","getItem","uid","setID","setItem","path","element","LandindPage","Login","Register","Logout","CreatePirate","ViewPirate","DeletePirate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfcde7a6.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\nimport { io } from \"socket.io-client\";\n\nexport default props => {\n    const [pirates, setPirates] = useState([]);\n    const [socket] = useState(() => io(':8000'));\n\n    useEffect(() => {\n        socket.emit(\"updateAllPirates\");\n        socket.on(\"pirates\", e => setPirates(e));\n    }, [])\n\n    return (\n        <div className=\"row m-3\">\n            <div className=\"nav m-3 align-items-center justify-content-between\">\n                <p className=\"display-2\">Pirate Crew</p>\n                <div className=\"d-flex flex-row\">\n                    <Link to=\"/create\" className=\"nav-link\">Add Pirate</Link>\n                    <Link to=\"/logout\" className=\"nav-link\">Logout</Link>\n                </div>\n            </div>\n            <TransitionGroup className=\"list-group list-group-flush\">\n            {pirates.map((item) => \n            <CSSTransition\n            timeout={300}\n            classNames=\"pirates\"\n            key={item._id}>\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <img src={item.image} alt=\"pirate img\" style={{height:200}} />\n                <Link to={\"/view/\" + item._id} className=\"nav-link\">{item.name}</Link>\n                <Link className=\"nav-link text-danger\" to={\"/delete/\" + item._id}>Make them walk the plank</Link>\n            </li>\n            </CSSTransition>\n            )}\n            </TransitionGroup>\n        </div>\n    );\n}","import axios from \"axios\";\nimport { useState } from \"react\";\nimport bcrypt from 'bcryptjs';\n\nexport default props => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        let user = await(await (axios.get(\"http://localhost:8000/api/users/name/\" + username + \"/\"))).data[0];\n        if(bcrypt.compareSync(password, user.password)) {\n            props.login(user._id);\n        }\n    }\n\n    return(\n        <form onSubmit={handleSubmit} className=\"form col m-5\">\n            <p className=\"display-2\">Login</p>\n            <div className=\"form-floating mb-3\">\n                <input type=\"text\" className=\"form-control\" value={username} placeholder=\"e\" onChange={(e) => setUsername(e.target.value)} />\n                <label className=\"text-black\">Username</label>\n            </div>\n            <div className=\"form-floating mb-3\">\n                <input type=\"password\" className=\"form-control\" value={password} placeholder=\"e\" onChange={e => setPassword(e.target.value)} />\n                <label className=\"text-black\">Password</label>\n            </div>\n            <div className=\"d-grid\">\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-outline-dark\" />\n            </div>\n        </form>\n    );\n}","import { useState, useEffect } from \"react\";\nimport axios from 'axios';\nconst bcrypt = require('bcryptjs');\n\n\nexport default props => {\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPW, setConfirm] = useState(\"\");\n    const [errs, setErrs] = useState({\n        userErr: false,\n        emailErr: false,\n        pwErr: false,\n        confirmErr: false,\n        nameErr: false,\n        mailErr: false\n    })\n\n    useEffect(async () => {\n        // if there are no errors go ahead and validate back side...\n        if (Object.keys(errs).every(e => errs[e] == false) && username.length != 0) {\n            let user = await (axios.post(\"http://localhost:8000/api/users/new\", {\n                username,\n                email,\n                password: bcrypt.hashSync(password, 8)\n            }))\n            let updatedErrs = { ...errs };\n            if (user.error) {\n                if (user.error.errors.username) {\n                    updatedErrs[\"userErr\"] = true;\n                }\n                if (user.error.errors.email) {\n                    updatedErrs[\"emailErr\"] = true;\n                }\n                if (user.error.errors.password) {\n                    updatedErrs[\"pwErr\"] = true;\n                }\n                setErrs(updatedErrs);\n            } else {\n                // if there still isn't any errors login to the account!\n                props.login(user.data._id);\n            }\n        }\n\n    }, [errs])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // establish a spread of the current errors so we can update the errors\n        let updatedErrs = { ...errs };\n\n        // update the old validations to false so that we can validate the backend again if need\n        updatedErrs[\"emailErr\"] = false;\n        updatedErrs[\"pwErr\"] = false;\n        updatedErrs[\"userErr\"] = false;\n\n        // check if passwords are the same\n        if (confirmPW != password) {\n            updatedErrs[\"confirmErr\"] = true;\n        } else {\n            updatedErrs[\"confirmErr\"] = false;\n        }\n\n        // check if the db has any users with the username\n        const name = await (await (axios.get(\"http://localhost:8000/api/users/name/\" + username + \"/\"))).data;\n        if (name.length != 0) {\n            updatedErrs[\"nameErr\"] = true;\n        } else {\n            updatedErrs[\"nameErr\"] = false;\n        }\n\n        // check if the email provided is already in use\n        const mail = await (await (axios.get(\"http://localhost:8000/api/users/email/\" + email + \"/\"))).data;\n        if (mail.length != 0) {\n            updatedErrs[\"mailErr\"] = true;\n        } else {\n            updatedErrs[\"mailErr\"] = false;\n        }\n\n        // update the errors with all the validations\n        setErrs(updatedErrs);\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form col m-5\">\n            <p className=\"display-2\">Register</p>\n            {errs['userErr'] && <p className=\"alert alert-danger text-center m-3\">Username must be at least 3 characters!</p>}\n            {errs[\"nameErr\"] && <p className=\"alert alert-danger text-center m-3\">Someone's already used that username!</p>}\n            <div className=\"form-floating mb-3\">\n                <input type=\"text\" className=\"form-control\" onChange={e => setUsername(e.target.value)} value={username} placeholder=\"e\" />\n                <label className=\"text-black\">Username</label>\n                {!errs[\"userErr\"] && <p className=\"form-text ms-3 text-start\">Username must be at least 3 characters</p>}\n            </div>\n            {errs[\"emailErr\"] && <div className=\"alert alert-danger text-center m-3\">Email is invalid</div>}\n            {errs[\"mailErr\"] && <p className=\"alert alert-danger text-center m-3\">Someone's already used that email!</p>}\n            <div className=\"form-floating mb-3\">\n                <input type=\"text\" value={email} placeholder=\"e\" onChange={e => setEmail(e.target.value)} className=\"form-control\" />\n                <label className=\"text-black\">Email</label>\n            </div>\n            {errs[\"pwErr\"] && <p className=\"alert alert-danger text-center m-3\">Password must be at least 8 characters and have at least one number!</p>}\n            <div className=\"form-floating mb-3\">\n                <input type=\"password\" value={password} placeholder=\"e\" onChange={e => setPassword(e.target.value)} className=\"form-control\" />\n                <label className=\"text-black\">Password</label>\n                {!errs[\"pwErr\"] && <p className=\"form-text ms-3 text-start\">Password needs to be 8 chars and have at least one number</p>}\n            </div>\n\n            {errs[\"confirmErr\"] && <p className=\"alert alert-danger text-center m-3\">Passwords must be the same!</p>}\n            <div className=\"form-floating mb-3\">\n                <input type=\"password\" value={confirmPW} placeholder=\"e\" onChange={e => setConfirm(e.target.value)} className=\"form-control\" />\n                <label className=\"text-black\">Confirm Password</label>\n            </div>\n            <div className=\"d-grid\">\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-outline-dark\" />\n            </div>\n        </form>\n    );\n}","import { useNavigate } from \"react-router\";\nimport { useEffect } from \"react\"; \n\nexport default (props) => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        props.login(\"\");\n        localStorage.clear();\n        navigate(\"/\");\n    }, [])\n\n    return(\n        <div>\n            \n        </div>\n    );\n}","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport default props => {\n    const [name, setName] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [numofchests, setChests] = useState(\"\");\n    const [catchphrase, setPhrase] = useState(\"\");\n    const [position, setPosition] = useState(\"Captain\");\n    const [pegleg, setPegleg] = useState(true);\n    const [eyepatch, setEyepatch] = useState(true);\n    const [hookhand, setHookhand] = useState(true);\n    const [errs, setErrrs] = useState({\n        name: \"\",\n        image: \"\",\n        numofchests: \"\",\n        catchphrase: \"\",\n        position:\"\",\n        pegleg:\"\",\n        eyepatch:\"\",\n        hookhand:\"\"\n    })\n\n    const navigate = useNavigate();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        let res = await (axios.post(\"http://localhost:8000/api/pirates/new\", {\n            name,\n            image,\n            numofchests,\n            catchphrase,\n            position,\n            pegleg,\n            eyepatch,\n            hookhand\n        }));\n        if (res.data.error) {\n            let updatedErrs = {...errs};\n            for(const error in res.data.error.errors) {\n                updatedErrs[error] = res.data.error.errors[error][\"message\"];\n            }\n            console.log(position)\n            setErrrs(updatedErrs);\n        } else {\n            navigate(\"/\");\n        }\n    }\n\n    return (\n        <div className=\"row m-3\">\n            <div className=\"nav justify-content-between m-3 align-items-center\">\n                <p className=\"display-3\">Add Pirate</p>\n                <Link to=\"/\" className=\"nav-link\">Crew Board</Link>\n            </div>\n            <form onSubmit={handleSubmit} className=\"form me-5\">\n            {errs[\"name\"] != \"\" && <div className=\"alert alert-danger\">{errs[\"name\"]}</div>}\n                <div className=\"form-floating mb-3\">\n                    <input type=\"text\" placeholder='e' value={name} onChange={e => setName(e.target.value)} className=\"form-control\" />\n                    <label className=\"text-black\">Pirate Name</label>\n                </div>\n                {errs[\"image\"] != \"\" && <div className=\"alert alert-danger\">{errs[\"image\"]}</div>}\n                <div className=\"form-floating mb-3\">\n                    <input type=\"text\" placeholder=\"e\" value={image} onChange={e => setImage(e.target.value)} className=\"form-control\" />\n                    <label className=\"text-black\">Image Url</label>\n                </div>\n                {errs[\"numofchests\"] != \"\" && <div className=\"alert alert-danger\">{errs[\"numofchests\"]}</div>}\n                <div className=\"form-floating mb-3\">\n                    <input type=\"number\" placeholder=\"e\" value={numofchests} onChange={e => setChests(e.target.value)} className=\"form-control\" />\n                    <label className=\"text-black\">Num of Chests</label>\n                </div>\n                {errs[\"catchphrase\"] != \"\" && <div className=\"alert alert-danger\">{errs[\"catchphrase\"]}</div>}\n                <div className=\"form-floating mb-3\">\n                    <textarea className=\"form-control\" style={{ height: 100 }} placeholder=\"e\" value={catchphrase} onChange={e => setPhrase(e.target.value)}></textarea>\n                    <label className=\"text-black\">Pirate Catch Phrases</label>\n                </div>\n                {errs[\"position\"] != \"\" && <div className=\"alert alert-danger\">{errs[\"position\"]}</div>}\n                <div className=\"text-start\">\n                    <label htmlFor=\"select\" className=\"text-black ms-2\">Position</label>\n                    <select id=\"select\" onChange={e => setPosition(e.target.value)} value={position} className=\"form-select mb-3\">\n                        <option value=\"Captain\">Captain</option>\n                        <option value=\"First Mate\">First Mate</option>\n                        <option value=\"Quarter Master\">Quarter Master</option>\n                        <option value=\"Boatswain\">Boatswain</option>\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\n                    </select>\n                </div>\n                <div className=\"form-check mb-3 text-start\">\n                    <input type=\"checkbox\" checked={pegleg} onChange={e => setPegleg(!pegleg)} className=\"form-check-input\" id=\"pegleg\" />\n                    <label htmlFor=\"pegleg\" className=\"form-check-label\">Pegleg</label>\n                </div>\n                <div className=\"form-check mb-3 text-start\">\n                    <input type=\"checkbox\" checked={eyepatch} onChange={e => setEyepatch(!eyepatch)} className=\"form-check-input\" id=\"eyepatch\" />\n                    <label htmlFor=\"eyepatch\" className=\"form-check-label\">Eyepatch</label>\n                </div>\n                <div className=\"form-check mb-3 text-start\">\n                    <input type=\"checkbox\" checked={hookhand} onChange={e => setHookhand(!hookhand)} className=\"form-check-input\" id=\"hookhand\" />\n                    <label htmlFor=\"hookhand\" className=\"form-check-label\">Hookhand</label>\n                </div>\n                <div className=\"d-grid\">\n                    <input type=\"submit\" value=\"Create\" className=\"btn btn-outline-dark\" />\n                </div>\n            </form>\n        </div>\n    );\n}","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nexport default props => {\n    const {id } = useParams();\n    const [pirate, setPirate] = useState({})\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pirates/\" + id + \"/\").then(e => {console.log(e.data); setPirate(e.data)}).catch(e => console.log(e));\n    }, [])\n\n    return(\n        <div className=\"row m-3\">\n            <div className=\"nav m-3 align-items-center justify-content-between\">\n                <p className=\"display-3\">{pirate.name}</p>\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\n            </div>\n            <div className=\"row m-5\">\n                <div className=\"col\">\n                    <img src={pirate.image} alt=\"pirate img\"/>\n                </div>\n                <div className=\"col row\">\n                    <p className=\"display-4\">About</p>\n                    <dt className=\"col-sm-3\">Position:</dt>\n                    <dd className=\"col-sm-9\">{pirate.position}</dd>\n                    <dt className=\"col-sm-3\">Treasures:</dt>\n                    <dd className=\"col-sm-9\">{pirate.numofchests}</dd>\n                    <dt className=\"col-sm-3\">Peg Leg:</dt>\n                    <dd className=\"col-sm-9\">{pirate.pegleg ? \"Yes\" : \"No\"}</dd>\n                    <dt className=\"col-sm-3\">Eye Patch:</dt>\n                    <dd className=\"col-sm-9\">{pirate.eyepatch ? \"Yes\" : \"No\"}</dd>\n                    <dt className=\"col-sm-3\">Hook Hand:</dt>\n                    <dd className=\"col-sm-9\">{pirate.hookhand ? \"Yes\" : \"No\"}</dd>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useParams, useNavigate } from \"react-router\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default props => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        axios.delete(\"http://localhost:8000/api/pirates/delete/\" + id + \"/\").then(() => navigate(\"/\"))\n    }, [])\n\n    return(\n        <div>\n\n        </div>\n    );\n}","import './App.css';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport LandindPage from './components/LandindPage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Logout from './components/Logout';\nimport CreatePirate from './components/CreatePirate';\nimport ViewPirate from './components/ViewPirate';\nimport DeletePirate from './components/DeletePirate';\n\nfunction App() {\n  const results = localStorage.getItem(\"uid\");\n  const [uid, setID] = useState(\n    results ? results : \"\"\n  );\n\n  const login = id => {\n    setID(id);\n    localStorage.setItem(\"uid\", id);\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={\n            uid ? \n            <LandindPage uid={uid} />\n            :\n            <div className=\"row\">\n              <Login login={login} />\n              <Register login={login} />\n            </div>\n          } />\n          <Route path=\"/logout\" element={<Logout login={login} />} />\n          <Route path=\"/create\" element={<CreatePirate />} />\n          <Route path=\"/view/:id\" element={<ViewPirate />} />\n          <Route path=\"/delete/:id\" element={<DeletePirate />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}